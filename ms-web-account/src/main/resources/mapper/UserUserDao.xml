<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pwd.initializr.account.persistence.dao.UserUserDao">

  <resultMap id="UserUserMap" type="pwd.initializr.account.persistence.entity.UserUserEntity">
    <result column="id" jdbcType="BIGINT" property="id"/>
    <result column="pin" jdbcType="VARCHAR" property="pin"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="gender" jdbcType="VARCHAR" property="gender"/>
    <result column="emp_no" jdbcType="VARCHAR" property="empNo"/>
    <result column="summary" jdbcType="VARCHAR" property="summary"/>
    <result column="able" jdbcType="INTEGER" property="able"/>
    <result column="del" jdbcType="INTEGER" property="del"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    <result column="version" jdbcType="BIGINT" property="version"/>
  </resultMap>

  <!--查询单个-->
  <select id="queryById" resultMap="UserUserMap">
        select
          id, pin, name, gender, emp_no, summary, able, del, create_time, update_time, version
        from user_user
        where id = #{id}
  </select>

  <!--查询单个-->
  <select id="queryByIds" resultMap="UserUserMap">
        select
          id, pin, name, gender, emp_no, summary, able, del, create_time, update_time, version
        from user_user
        where id in
        <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
          #{id}
        </foreach>
  </select>

  <!--通过实体作为筛选条件统计-->
  <select id="countAllByCondition" resultType="java.lang.Long">
    select count(*) from user_user
    <include refid="pwd.initializr.common.web.persistence.entity.ScopeEntity.entityQueryScope"></include>
  </select>

  <!--通过实体作为筛选条件查询-->
  <select id="queryAllByCondition" resultMap="UserUserMap">
    select
    id, pin, name, gender, emp_no, summary, able, del, create_time, update_time
    from user_user
    <include refid="pwd.initializr.common.web.persistence.entity.ScopeEntity.entityQueryScope"></include>
    <include refid="pwd.initializr.common.web.persistence.entity.SortEntity.entityQuerySort"></include>
    limit #{offset}, #{limit}
  </select>

  <!--新增所有列-->
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user_user(pin, name, gender, emp_no, summary, able, del, create_time, update_time)
        values (#{pin}, #{name}, #{gender}, #{empNo}, #{summary}, #{able}, #{del}, #{createTime}, #{updateTime})
    </insert>

  <!--通过主键修改数据-->
  <update id="update">
    update user_user
    <set>
      <if test="pin != null and pin != ''">
        pin = #{pin},
      </if>
      <if test="name != null and name != ''">
        name = #{name},
      </if>
      <if test="gender != null and gender != ''">
        gender = #{gender},
      </if>
      <if test="summary != null and summary != ''">
        summary = #{summary},
      </if>
      update_time = now()
    </set>
    where id = #{id}
  </update>

  <!--通过主键删除-->
  <delete id="deleteById">
    update user_user set del = 1, update_time = now() where id = #{id}
  </delete>

  <!--通过主键删除-->
  <delete id="deleteByIds">
    update user_user set del = 1, update_time = now() where id in
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </delete>

  <!--通过主键启禁-->
  <update id="ableById">
    update user_user set able = #{able}, update_time = now() where id = #{id}
  </update>

  <!--通过主键启禁-->
  <update id="ableByIds">
    update user_user set able = #{able}, update_time = now() where id in
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </update>


</mapper>
