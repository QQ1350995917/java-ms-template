<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pwd.initializr.monitor.persistence.dao.HostDiskUsageDao">

  <resultMap id="HostDiskUsageMap" type="pwd.initializr.monitor.persistence.entity.HostDiskUsageEntity">
    <result column="id" jdbcType="VARCHAR" property="id"/>
    <result column="dev_name" jdbcType="VARCHAR" property="devName"/>
    <result column="total" jdbcType="BIGINT" property="total"/>
    <result column="free" jdbcType="BIGINT" property="free"/>
    <result column="used" jdbcType="BIGINT" property="used"/>
    <result column="avail" jdbcType="BIGINT" property="avail"/>
    <result column="files" jdbcType="BIGINT" property="files"/>
    <result column="free_files" jdbcType="BIGINT" property="freeFiles"/>
    <result column="disk_reads" jdbcType="BIGINT" property="diskReads"/>
    <result column="disk_writes" jdbcType="BIGINT" property="diskWrites"/>
    <result column="disk_read_bytes" jdbcType="BIGINT" property="diskReadBytes"/>
    <result column="disk_write_bytes" jdbcType="BIGINT" property="diskWriteBytes"/>
    <result column="disk_queue" jdbcType="BIGINT" property="diskQueue"/>
    <result column="disk_service_time" jdbcType="BIGINT" property="diskServiceTime"/>
    <result column="use_percent" jdbcType="BIGINT" property="usePercent"/>
    <result column="able" jdbcType="INTEGER" property="able"/>
    <result column="del" jdbcType="INTEGER" property="del"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>

  <!--根据主键查询查询-->
  <select id="queryById" resultMap="HostDiskUsageMap">
    SELECT
      `id`,
      `dev_name`,
      `total`,
      `free`,
      `used`,
      `avail`,
      `files`,
      `free_files`,
      `disk_reads`,
      `disk_writes`,
      `disk_read_bytes`,
      `disk_write_bytes`,
      `disk_queue`,
      `disk_service_time`,
      `use_percent`,
      `able`,
      `del`,
      `create_time`,
      `update_time`
    FROM
      host_disk_usage
    WHERE
      id = #{id}
  </select>

  <!--查询指定行数据-->
  <select id="countByCondition" resultType="java.lang.Long">
    SELECT COUNT(*) FROM host_disk_usage
    <include refid="pwd.initializr.common.web.persistence.entity.ScopeEntity.entityQueryScope"></include>
  </select>

  <!--通过实体作为筛选条件查询-->
  <select id="queryByCondition" resultMap="HostDiskUsageMap">
    SELECT
      `id`,
      `dev_name`,
      `total`,
      `free`,
      `used`,
      `avail`,
      `files`,
      `free_files`,
      `disk_reads`,
      `disk_writes`,
      `disk_read_bytes`,
      `disk_write_bytes`,
      `disk_queue`,
      `disk_service_time`,
      `use_percent`,
      `able`,
      `del`,
      `create_time`,
      `update_time`
    FROM
      host_disk_usage
    <include refid="pwd.initializr.common.web.persistence.entity.ScopeEntity.entityQueryScope"></include>
    <include refid="pwd.initializr.common.web.persistence.entity.SortEntity.entityQuerySort"></include>
    LIMIT
      #{offset}, #{limit}
  </select>

  <!--新增所有列-->
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    INSERT INTO host_disk_usage
      (
        `id`,
        `dev_name`,
        `total`,
        `free`,
        `used`,
        `avail`,
        `files`,
        `free_files`,
        `disk_reads`,
        `disk_writes`,
        `disk_read_bytes`,
        `disk_write_bytes`,
        `disk_queue`,
        `disk_service_time`,
        `use_percent`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
      )
    VALUES
      (
        #{entity.id},
        #{entity.devName},
        #{entity.total},
        #{entity.free},
        #{entity.used},
        #{entity.avail},
        #{entity.files},
        #{entity.freeFiles},
        #{entity.diskReads},
        #{entity.diskWrites},
        #{entity.diskReadBytes},
        #{entity.diskWriteBytes},
        #{entity.diskQueue},
        #{entity.diskServiceTime},
        #{entity.usePercent},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
      )
  </insert>

  <!--新增所有列-->
  <insert id="insertBatch">
    INSERT INTO host_disk_usage
      (
        `id`,
        `dev_name`,
        `total`,
        `free`,
        `used`,
        `avail`,
        `files`,
        `free_files`,
        `disk_reads`,
        `disk_writes`,
        `disk_read_bytes`,
        `disk_write_bytes`,
        `disk_queue`,
        `disk_service_time`,
        `use_percent`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
      )
    VALUES
    <foreach collection="entities" item="entity" separator=",">
      (
      #{entity.id},
      #{entity.devName},
      #{entity.total},
      #{entity.free},
      #{entity.used},
      #{entity.avail},
      #{entity.files},
      #{entity.freeFiles},
      #{entity.diskReads},
      #{entity.diskWrites},
      #{entity.diskReadBytes},
      #{entity.diskWriteBytes},
      #{entity.diskQueue},
      #{entity.diskServiceTime},
      #{entity.usePercent},
      #{entity.able},
      #{entity.del},
      #{entity.createTime},
      #{entity.updateTime}
      )
    </foreach>
  </insert>

  <!--通过主键修改数据-->
  <update id="updateById">
    UPDATE host_disk_usage
    <set>
      <if test="entity.id != null and entity.id != ''">
        `id` = #{entity.id},
      </if>
      <if test="entity.devName != null and entity.devName != ''">
        `dev_name` = #{entity.devName},
      </if>
      <if test="entity.total != null and entity.total != ''">
        `total` = #{entity.total},
      </if>
      <if test="entity.free != null and entity.free != ''">
        `free` = #{entity.free},
      </if>
      <if test="entity.used != null and entity.used != ''">
        `used` = #{entity.used},
      </if>
      <if test="entity.avail != null and entity.avail != ''">
        `avail` = #{entity.avail},
      </if>
      <if test="entity.files != null and entity.files != ''">
        `files` = #{entity.files},
      </if>
      <if test="entity.freeFiles != null and entity.freeFiles != ''">
        `free_files` = #{entity.freeFiles},
      </if>
      <if test="entity.diskReads != null and entity.diskReads != ''">
        `disk_reads` = #{entity.diskReads},
      </if>
      <if test="entity.diskWrites != null and entity.diskWrites != ''">
        `disk_writes` = #{entity.diskWrites},
      </if>
      <if test="entity.diskReadBytes != null and entity.diskReadBytes != ''">
        `disk_read_bytes` = #{entity.diskReadBytes},
      </if>
      <if test="entity.diskWriteBytes != null and entity.diskWriteBytes != ''">
        `disk_write_bytes` = #{entity.diskWriteBytes},
      </if>
      <if test="entity.diskQueue != null and entity.diskQueue != ''">
        `disk_queue` = #{entity.diskQueue},
      </if>
      <if test="entity.diskServiceTime != null and entity.diskServiceTime != ''">
        `disk_service_time` = #{entity.diskServiceTime},
      </if>
      <if test="entity.usePercent != null and entity.usePercent != ''">
        `use_percent` = #{entity.usePercent},
      </if>
      <if test="entity.able != null and entity.able != ''">
        `able` = #{entity.able},
      </if>
      <if test="entity.del != null and entity.del != ''">
        `del` = #{entity.del},
      </if>
      <if test="entity.createTime != null and entity.createTime != ''">
        `create_time` = #{entity.createTime},
      </if>
      <if test="entity.updateTime != null and entity.updateTime != ''">
        `update_time` = #{entity.updateTime},
      </if>
    </set>
    WHERE
      id = #{id}
  </update>

  <!--通过主键删除-->
  <update id="deleteById">
    UPDATE host_disk_usage
    SET
      del = 1,
      update_time = now()
    WHERE
      id = #{id}
  </update>

  <!--通过主键批量删除-->
  <update id="deleteByIds">
    UPDATE host_disk_usage
    SET
      del = 1,
      update_time = now()
    WHERE
      id in
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </update>

  <!--通过主键启禁-->
  <update id="ableById">
    UPDATE host_disk_usage
    SET
      able = #{able},
      update_time = now()
    WHERE
      id = #{id}
  </update>

  <!--通过主键批量启禁-->
  <update id="ableByIds">
    UPDATE host_disk_usage
    SET
      able = #{able},
      update_time = now()
    WHERE
      id in
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </update>

</mapper>
