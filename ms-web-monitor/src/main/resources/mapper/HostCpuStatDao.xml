<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pwd.initializr.monitor.persistence.dao.HostCpuStatDao">

  <resultMap id="HostCpuStatMap" type="pwd.initializr.monitor.persistence.entity.HostCpuStatEntity">
    <result column="group_name" jdbcType="VARCHAR" property="groupName"/>
    <result column="node_name" jdbcType="VARCHAR" property="nodeName"/>
    <result column="user" jdbcType="INTEGER" property="user"/>
    <result column="nice" jdbcType="INTEGER" property="nice"/>
    <result column="system" jdbcType="INTEGER" property="system"/>
    <result column="idle" jdbcType="INTEGER" property="idle"/>
    <result column="iowait" jdbcType="INTEGER" property="iowait"/>
    <result column="irq" jdbcType="INTEGER" property="irq"/>
    <result column="softirq" jdbcType="INTEGER" property="softirq"/>
    <result column="steal" jdbcType="INTEGER" property="steal"/>
    <result column="guest" jdbcType="INTEGER" property="guest"/>
    <result column="guest_nice" jdbcType="INTEGER" property="guestNice"/>
    <result column="able" jdbcType="INTEGER" property="able"/>
    <result column="del" jdbcType="INTEGER" property="del"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>

  <!--根据主键查询查询-->
  <select id="queryById" resultMap="HostCpuStatMap">
    SELECT
      `group_name`,
      `node_name`,
      `user`,
      `nice`,
      `system`,
      `idle`,
      `iowait`,
      `irq`,
      `softirq`,
      `steal`,
      `guest`,
      `guest_nice`,
      `able`,
      `del`,
      `create_time`,
      `update_time`
    FROM
      host_cpu_stat
    WHERE
      id = #{id}
  </select>

  <!--查询指定行数据-->
  <select id="countByCondition" resultType="java.lang.Long">
    SELECT COUNT(*) FROM host_cpu_stat
    <include refid="pwd.initializr.common.web.persistence.entity.ScopeEntity.entityQueryScope"></include>
  </select>

  <!--通过实体作为筛选条件查询-->
  <select id="queryByCondition" resultMap="HostCpuStatMap">
    SELECT
      `group_name`,
      `node_name`,
      `user`,
      `nice`,
      `system`,
      `idle`,
      `iowait`,
      `irq`,
      `softirq`,
      `steal`,
      `guest`,
      `guest_nice`,
      `able`,
      `del`,
      `create_time`,
      `update_time`
    FROM
      host_cpu_stat
    <include refid="pwd.initializr.common.web.persistence.entity.ScopeEntity.entityQueryScope"></include>
    <include refid="pwd.initializr.common.web.persistence.entity.SortEntity.entityQuerySort"></include>
    LIMIT
      #{offset}, #{limit}
  </select>

  <!--新增所有列-->
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    INSERT INTO host_cpu_stat
      (
        `group_name`,
        `node_name`,
        `user`,
        `nice`,
        `system`,
        `idle`,
        `iowait`,
        `irq`,
        `softirq`,
        `steal`,
        `guest`,
        `guest_nice`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
      )
    VALUES
      (
        #{entity.groupName},
        #{entity.nodeName},
        #{entity.user},
        #{entity.nice},
        #{entity.system},
        #{entity.idle},
        #{entity.iowait},
        #{entity.irq},
        #{entity.softirq},
        #{entity.steal},
        #{entity.guest},
        #{entity.guestNice},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
      )
  </insert>

  <!--新增所有列（批量新增）-->
  <insert id="insertByBatch" keyProperty="id" useGeneratedKeys="true">
    INSERT INTO host_cpu_stat
    (
        `group_name`,
        `node_name`,
        `user`,
        `nice`,
        `system`,
        `idle`,
        `iowait`,
        `irq`,
        `softirq`,
        `steal`,
        `guest`,
        `guest_nice`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
    )
    VALUES
    <foreach collection="entities" item="entity" separator=",">
    (
        #{entity.groupName},
        #{entity.nodeName},
        #{entity.user},
        #{entity.nice},
        #{entity.system},
        #{entity.idle},
        #{entity.iowait},
        #{entity.irq},
        #{entity.softirq},
        #{entity.steal},
        #{entity.guest},
        #{entity.guestNice},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
    )
    </foreach>
  </insert>

  <!--新增或者替换所有列-->
  <insert id="insertOrReplace" keyProperty="id" useGeneratedKeys="true">
    REPLACE INTO host_cpu_stat
    (
        `group_name`,
        `node_name`,
        `user`,
        `nice`,
        `system`,
        `idle`,
        `iowait`,
        `irq`,
        `softirq`,
        `steal`,
        `guest`,
        `guest_nice`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
    )
    VALUES
    (
        #{entity.groupName},
        #{entity.nodeName},
        #{entity.user},
        #{entity.nice},
        #{entity.system},
        #{entity.idle},
        #{entity.iowait},
        #{entity.irq},
        #{entity.softirq},
        #{entity.steal},
        #{entity.guest},
        #{entity.guestNice},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
    )
  </insert>

  <!--新增或者替换所有列（批量新增或者替换）-->
  <insert id="insertOrReplaceByBatch" keyProperty="id" useGeneratedKeys="true">
    REPLACE INTO host_cpu_stat
    (
        `group_name`,
        `node_name`,
        `user`,
        `nice`,
        `system`,
        `idle`,
        `iowait`,
        `irq`,
        `softirq`,
        `steal`,
        `guest`,
        `guest_nice`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
    )
    VALUES
    <foreach collection="entities" item="entity" separator=",">
      (
        #{entity.groupName},
        #{entity.nodeName},
        #{entity.user},
        #{entity.nice},
        #{entity.system},
        #{entity.idle},
        #{entity.iowait},
        #{entity.irq},
        #{entity.softirq},
        #{entity.steal},
        #{entity.guest},
        #{entity.guestNice},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
      )
    </foreach>
  </insert>

  <!--通过主键修改数据-->
  <update id="updateById">
    UPDATE host_cpu_stat
    <set>
      <if test="entity.groupName != null and entity.groupName != ''">
        `group_name` = #{entity.groupName},
      </if>
      <if test="entity.nodeName != null and entity.nodeName != ''">
        `node_name` = #{entity.nodeName},
      </if>
      <if test="entity.user != null and entity.user != ''">
        `user` = #{entity.user},
      </if>
      <if test="entity.nice != null and entity.nice != ''">
        `nice` = #{entity.nice},
      </if>
      <if test="entity.system != null and entity.system != ''">
        `system` = #{entity.system},
      </if>
      <if test="entity.idle != null and entity.idle != ''">
        `idle` = #{entity.idle},
      </if>
      <if test="entity.iowait != null and entity.iowait != ''">
        `iowait` = #{entity.iowait},
      </if>
      <if test="entity.irq != null and entity.irq != ''">
        `irq` = #{entity.irq},
      </if>
      <if test="entity.softirq != null and entity.softirq != ''">
        `softirq` = #{entity.softirq},
      </if>
      <if test="entity.steal != null and entity.steal != ''">
        `steal` = #{entity.steal},
      </if>
      <if test="entity.guest != null and entity.guest != ''">
        `guest` = #{entity.guest},
      </if>
      <if test="entity.guestNice != null and entity.guestNice != ''">
        `guest_nice` = #{entity.guestNice},
      </if>
      <if test="entity.able != null and entity.able != ''">
        `able` = #{entity.able},
      </if>
      <if test="entity.del != null and entity.del != ''">
        `del` = #{entity.del},
      </if>
      <if test="entity.createTime != null and entity.createTime != ''">
        `create_time` = #{entity.createTime},
      </if>
      <if test="entity.updateTime != null and entity.updateTime != ''">
        `update_time` = #{entity.updateTime},
      </if>
    </set>
    WHERE
      id = #{entity.id}
  </update>

  <!--通过主键删除-->
  <update id="deleteById">
    UPDATE host_cpu_stat
    SET
      del = 1,
      update_time = now()
    WHERE
      id = #{id}
  </update>

  <!--通过主键批量删除-->
  <update id="deleteByIds">
    UPDATE host_cpu_stat
    SET
      del = 1,
      update_time = now()
    WHERE
      id in
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </update>

  <!--通过主键启禁-->
  <update id="ableById">
    UPDATE host_cpu_stat
    SET
      able = #{able},
      update_time = now()
    WHERE
      id = #{id}
  </update>

  <!--通过主键批量启禁-->
  <update id="ableByIds">
    UPDATE host_cpu_stat
    SET
      able = #{able},
      update_time = now()
    WHERE
      id in
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </update>

</mapper>
