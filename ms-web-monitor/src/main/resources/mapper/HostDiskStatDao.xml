<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pwd.initializr.monitor.persistence.dao.HostDiskStatDao">

  <resultMap id="HostDiskStatMap" type="pwd.initializr.monitor.persistence.entity.HostDiskStatEntity">
    <result column="group_name" jdbcType="VARCHAR" property="groupName"/>
    <result column="node_name" jdbcType="VARCHAR" property="nodeName"/>
    <result column="major_device_number" jdbcType="INTEGER" property="majorDeviceNumber"/>
    <result column="minor_device_number" jdbcType="INTEGER" property="minorDeviceNumber"/>
    <result column="device_name" jdbcType="VARCHAR" property="deviceName"/>
    <result column="read" jdbcType="INTEGER" property="read"/>
    <result column="read_merge" jdbcType="INTEGER" property="readMerge"/>
    <result column="read_sector" jdbcType="INTEGER" property="readSector"/>
    <result column="read_spent_milliseconds" jdbcType="INTEGER" property="readSpentMilliseconds"/>
    <result column="write" jdbcType="INTEGER" property="write"/>
    <result column="write_merge" jdbcType="INTEGER" property="writeMerge"/>
    <result column="write_sector" jdbcType="INTEGER" property="writeSector"/>
    <result column="write_spent_milliseconds" jdbcType="INTEGER" property="writeSpentMilliseconds"/>
    <result column="io_request" jdbcType="INTEGER" property="ioRequest"/>
    <result column="io_spent_milliseconds" jdbcType="INTEGER" property="ioSpentMilliseconds"/>
    <result column="io_spent_all_milliseconds" jdbcType="INTEGER" property="ioSpentAllMilliseconds"/>
    <result column="able" jdbcType="INTEGER" property="able"/>
    <result column="del" jdbcType="INTEGER" property="del"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>

  <!--根据主键查询查询-->
  <select id="queryById" resultMap="HostDiskStatMap">
    SELECT
      `group_name`,
      `node_name`,
      `major_device_number`,
      `minor_device_number`,
      `device_name`,
      `read`,
      `read_merge`,
      `read_sector`,
      `read_spent_milliseconds`,
      `write`,
      `write_merge`,
      `write_sector`,
      `write_spent_milliseconds`,
      `io_request`,
      `io_spent_milliseconds`,
      `io_spent_all_milliseconds`,
      `able`,
      `del`,
      `create_time`,
      `update_time`
    FROM
      host_disk_stat
    WHERE
      id = #{id}
  </select>

  <!--查询指定行数据-->
  <select id="countByCondition" resultType="java.lang.Long">
    SELECT COUNT(*) FROM host_disk_stat
    <include refid="pwd.initializr.common.web.persistence.entity.ScopeEntity.entityQueryScope"></include>
  </select>

  <!--通过实体作为筛选条件查询-->
  <select id="queryByCondition" resultMap="HostDiskStatMap">
    SELECT
      `group_name`,
      `node_name`,
      `major_device_number`,
      `minor_device_number`,
      `device_name`,
      `read`,
      `read_merge`,
      `read_sector`,
      `read_spent_milliseconds`,
      `write`,
      `write_merge`,
      `write_sector`,
      `write_spent_milliseconds`,
      `io_request`,
      `io_spent_milliseconds`,
      `io_spent_all_milliseconds`,
      `able`,
      `del`,
      `create_time`,
      `update_time`
    FROM
      host_disk_stat
    <include refid="pwd.initializr.common.web.persistence.entity.ScopeEntity.entityQueryScope"></include>
    <include refid="pwd.initializr.common.web.persistence.entity.SortEntity.entityQuerySort"></include>
    LIMIT
      #{offset}, #{limit}
  </select>

  <!--新增所有列-->
  <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="pwd.initializr.monitor.persistence.entity.HostDiskStatEntity">
    INSERT INTO host_disk_stat
      (
        `group_name`,
        `node_name`,
        `major_device_number`,
        `minor_device_number`,
        `device_name`,
        `read`,
        `read_merge`,
        `read_sector`,
        `read_spent_milliseconds`,
        `write`,
        `write_merge`,
        `write_sector`,
        `write_spent_milliseconds`,
        `io_request`,
        `io_spent_milliseconds`,
        `io_spent_all_milliseconds`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
      )
    VALUES
      (
        #{entity.groupName},
        #{entity.nodeName},
        #{entity.majorDeviceNumber},
        #{entity.minorDeviceNumber},
        #{entity.deviceName},
        #{entity.read},
        #{entity.readMerge},
        #{entity.readSector},
        #{entity.readSpentMilliseconds},
        #{entity.write},
        #{entity.writeMerge},
        #{entity.writeSector},
        #{entity.writeSpentMilliseconds},
        #{entity.ioRequest},
        #{entity.ioSpentMilliseconds},
        #{entity.ioSpentAllMilliseconds},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
      )
  </insert>

  <!--新增所有列（批量新增）-->
  <insert id="insertByBatch" keyProperty="id" useGeneratedKeys="true" parameterType="pwd.initializr.monitor.persistence.entity.HostDiskStatEntity">
    INSERT INTO host_disk_stat
    (
        `group_name`,
        `node_name`,
        `major_device_number`,
        `minor_device_number`,
        `device_name`,
        `read`,
        `read_merge`,
        `read_sector`,
        `read_spent_milliseconds`,
        `write`,
        `write_merge`,
        `write_sector`,
        `write_spent_milliseconds`,
        `io_request`,
        `io_spent_milliseconds`,
        `io_spent_all_milliseconds`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
    )
    VALUES
    <foreach collection="entities" item="entity" separator=",">
    (
        #{entity.groupName},
        #{entity.nodeName},
        #{entity.majorDeviceNumber},
        #{entity.minorDeviceNumber},
        #{entity.deviceName},
        #{entity.read},
        #{entity.readMerge},
        #{entity.readSector},
        #{entity.readSpentMilliseconds},
        #{entity.write},
        #{entity.writeMerge},
        #{entity.writeSector},
        #{entity.writeSpentMilliseconds},
        #{entity.ioRequest},
        #{entity.ioSpentMilliseconds},
        #{entity.ioSpentAllMilliseconds},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
    )
    </foreach>
  </insert>

  <!--新增或者替换所有列-->
  <insert id="insertOrReplace" keyProperty="id" useGeneratedKeys="true" parameterType="pwd.initializr.monitor.persistence.entity.HostDiskStatEntity">
    REPLACE INTO host_disk_stat
    (
        `group_name`,
        `node_name`,
        `major_device_number`,
        `minor_device_number`,
        `device_name`,
        `read`,
        `read_merge`,
        `read_sector`,
        `read_spent_milliseconds`,
        `write`,
        `write_merge`,
        `write_sector`,
        `write_spent_milliseconds`,
        `io_request`,
        `io_spent_milliseconds`,
        `io_spent_all_milliseconds`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
    )
    VALUES
    (
        #{entity.groupName},
        #{entity.nodeName},
        #{entity.majorDeviceNumber},
        #{entity.minorDeviceNumber},
        #{entity.deviceName},
        #{entity.read},
        #{entity.readMerge},
        #{entity.readSector},
        #{entity.readSpentMilliseconds},
        #{entity.write},
        #{entity.writeMerge},
        #{entity.writeSector},
        #{entity.writeSpentMilliseconds},
        #{entity.ioRequest},
        #{entity.ioSpentMilliseconds},
        #{entity.ioSpentAllMilliseconds},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
    )
  </insert>

  <!--新增或者替换所有列（批量新增或者替换）-->
  <insert id="insertOrReplaceByBatch" keyProperty="id" useGeneratedKeys="true" parameterType="pwd.initializr.monitor.persistence.entity.HostDiskStatEntity">
    REPLACE INTO host_disk_stat
    (
        `group_name`,
        `node_name`,
        `major_device_number`,
        `minor_device_number`,
        `device_name`,
        `read`,
        `read_merge`,
        `read_sector`,
        `read_spent_milliseconds`,
        `write`,
        `write_merge`,
        `write_sector`,
        `write_spent_milliseconds`,
        `io_request`,
        `io_spent_milliseconds`,
        `io_spent_all_milliseconds`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
    )
    VALUES
    <foreach collection="entities" item="entity" separator=",">
      (
        #{entity.groupName},
        #{entity.nodeName},
        #{entity.majorDeviceNumber},
        #{entity.minorDeviceNumber},
        #{entity.deviceName},
        #{entity.read},
        #{entity.readMerge},
        #{entity.readSector},
        #{entity.readSpentMilliseconds},
        #{entity.write},
        #{entity.writeMerge},
        #{entity.writeSector},
        #{entity.writeSpentMilliseconds},
        #{entity.ioRequest},
        #{entity.ioSpentMilliseconds},
        #{entity.ioSpentAllMilliseconds},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
      )
    </foreach>
  </insert>

  <!--通过主键修改数据-->
  <update id="updateById" parameterType="pwd.initializr.monitor.persistence.entity.HostDiskStatEntity">
    UPDATE host_disk_stat
    <set>
      <if test="entity.groupName != null and entity.groupName != ''">
        `group_name` = #{entity.groupName},
      </if>
      <if test="entity.nodeName != null and entity.nodeName != ''">
        `node_name` = #{entity.nodeName},
      </if>
      <if test="entity.majorDeviceNumber != null and entity.majorDeviceNumber != ''">
        `major_device_number` = #{entity.majorDeviceNumber},
      </if>
      <if test="entity.minorDeviceNumber != null and entity.minorDeviceNumber != ''">
        `minor_device_number` = #{entity.minorDeviceNumber},
      </if>
      <if test="entity.deviceName != null and entity.deviceName != ''">
        `device_name` = #{entity.deviceName},
      </if>
      <if test="entity.read != null and entity.read != ''">
        `read` = #{entity.read},
      </if>
      <if test="entity.readMerge != null and entity.readMerge != ''">
        `read_merge` = #{entity.readMerge},
      </if>
      <if test="entity.readSector != null and entity.readSector != ''">
        `read_sector` = #{entity.readSector},
      </if>
      <if test="entity.readSpentMilliseconds != null and entity.readSpentMilliseconds != ''">
        `read_spent_milliseconds` = #{entity.readSpentMilliseconds},
      </if>
      <if test="entity.write != null and entity.write != ''">
        `write` = #{entity.write},
      </if>
      <if test="entity.writeMerge != null and entity.writeMerge != ''">
        `write_merge` = #{entity.writeMerge},
      </if>
      <if test="entity.writeSector != null and entity.writeSector != ''">
        `write_sector` = #{entity.writeSector},
      </if>
      <if test="entity.writeSpentMilliseconds != null and entity.writeSpentMilliseconds != ''">
        `write_spent_milliseconds` = #{entity.writeSpentMilliseconds},
      </if>
      <if test="entity.ioRequest != null and entity.ioRequest != ''">
        `io_request` = #{entity.ioRequest},
      </if>
      <if test="entity.ioSpentMilliseconds != null and entity.ioSpentMilliseconds != ''">
        `io_spent_milliseconds` = #{entity.ioSpentMilliseconds},
      </if>
      <if test="entity.ioSpentAllMilliseconds != null and entity.ioSpentAllMilliseconds != ''">
        `io_spent_all_milliseconds` = #{entity.ioSpentAllMilliseconds},
      </if>
      <if test="entity.able != null and entity.able != ''">
        `able` = #{entity.able},
      </if>
      <if test="entity.del != null and entity.del != ''">
        `del` = #{entity.del},
      </if>
      <if test="entity.createTime != null and entity.createTime != ''">
        `create_time` = #{entity.createTime},
      </if>
      <if test="entity.updateTime != null and entity.updateTime != ''">
        `update_time` = #{entity.updateTime},
      </if>
    </set>
    WHERE
      id = #{entity.id}
  </update>

  <!--通过主键删除-->
  <update id="deleteById">
    UPDATE host_disk_stat
    SET
      del = 1,
      update_time = now()
    WHERE
      id = #{id}
  </update>

  <!--通过主键批量删除-->
  <update id="deleteByIds">
    UPDATE host_disk_stat
    SET
      del = 1,
      update_time = now()
    WHERE
      id in
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </update>

  <!--通过主键启禁-->
  <update id="ableById">
    UPDATE host_disk_stat
    SET
      able = #{able},
      update_time = now()
    WHERE
      id = #{id}
  </update>

  <!--通过主键批量启禁-->
  <update id="ableByIds">
    UPDATE host_disk_stat
    SET
      able = #{able},
      update_time = now()
    WHERE
      id in
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </update>

</mapper>
