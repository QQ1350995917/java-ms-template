<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pwd.initializr.monitor.persistence.dao.HostCpuCoreDao">

  <resultMap id="HostCpuCoreMap" type="pwd.initializr.monitor.persistence.entity.HostCpuCoreEntity">
    <result column="id" jdbcType="VARCHAR" property="id"/>
    <result column="index" jdbcType="VARCHAR" property="index"/>
    <result column="vendor" jdbcType="VARCHAR" property="vendor"/>
    <result column="model" jdbcType="VARCHAR" property="model"/>
    <result column="cache_size" jdbcType="BIGINT" property="cacheSize"/>
    <result column="mhz" jdbcType="INTEGER" property="mhz"/>
    <result column="total_cores" jdbcType="INTEGER" property="totalCores"/>
    <result column="total_sockets" jdbcType="INTEGER" property="totalSockets"/>
    <result column="cores_per_socket" jdbcType="INTEGER" property="coresPerSocket"/>
    <result column="able" jdbcType="INTEGER" property="able"/>
    <result column="del" jdbcType="INTEGER" property="del"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>

  <!--根据主键查询查询-->
  <select id="queryById" resultMap="HostCpuCoreMap">
    SELECT
      `id`,
      `index`,
      `vendor`,
      `model`,
      `cache_size`,
      `mhz`,
      `total_cores`,
      `total_sockets`,
      `cores_per_socket`,
      `able`,
      `del`,
      `create_time`,
      `update_time`
    FROM
      host_cpu_core
    WHERE
      id = #{id}
  </select>

  <!--查询指定行数据-->
  <select id="countByCondition" resultType="java.lang.Long">
    SELECT COUNT(*) FROM host_cpu_core
    <include refid="pwd.initializr.common.web.persistence.entity.ScopeEntity.entityQueryScope"></include>
  </select>

  <!--通过实体作为筛选条件查询-->
  <select id="queryByCondition" resultMap="HostCpuCoreMap">
    SELECT
      `id`,
      `index`,
      `vendor`,
      `model`,
      `cache_size`,
      `mhz`,
      `total_cores`,
      `total_sockets`,
      `cores_per_socket`,
      `able`,
      `del`,
      `create_time`,
      `update_time`
    FROM
      host_cpu_core
    <include refid="pwd.initializr.common.web.persistence.entity.ScopeEntity.entityQueryScope"></include>
    <include refid="pwd.initializr.common.web.persistence.entity.SortEntity.entityQuerySort"></include>
    LIMIT
      #{offset}, #{limit}
  </select>

  <!--新增所有列-->
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    INSERT INTO host_cpu_core
      (
        `id`,
        `index`,
        `vendor`,
        `model`,
        `cache_size`,
        `mhz`,
        `total_cores`,
        `total_sockets`,
        `cores_per_socket`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
      )
    VALUES
      (
        #{entity.id},
        #{entity.index},
        #{entity.vendor},
        #{entity.model},
        #{entity.cacheSize},
        #{entity.mhz},
        #{entity.totalCores},
        #{entity.totalSockets},
        #{entity.coresPerSocket},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
      )
  </insert>

  <!--新增所有列-->
  <insert id="insertOrReplace" keyProperty="id" useGeneratedKeys="true">
    REPLACE INTO host_cpu_core
      (
        `id`,
        `index`,
        `vendor`,
        `model`,
        `cache_size`,
        `mhz`,
        `total_cores`,
        `total_sockets`,
        `cores_per_socket`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
      )
    VALUES
      (
        #{entity.id},
        #{entity.index},
        #{entity.vendor},
        #{entity.model},
        #{entity.cacheSize},
        #{entity.mhz},
        #{entity.totalCores},
        #{entity.totalSockets},
        #{entity.coresPerSocket},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
      )
  </insert>

  <!--通过主键修改数据-->
  <update id="updateById">
    UPDATE host_cpu_core
    <set>
      <if test="entity.id != null and entity.id != ''">
        `id` = #{entity.id},
      </if>
      <if test="entity.index != null and entity.index != ''">
        `index` = #{entity.index},
      </if>
      <if test="entity.vendor != null and entity.vendor != ''">
        `vendor` = #{entity.vendor},
      </if>
      <if test="entity.model != null and entity.model != ''">
        `model` = #{entity.model},
      </if>
      <if test="entity.cacheSize != null and entity.cacheSize != ''">
        `cache_size` = #{entity.cacheSize},
      </if>
      <if test="entity.mhz != null and entity.mhz != ''">
        `mhz` = #{entity.mhz},
      </if>
      <if test="entity.totalCores != null and entity.totalCores != ''">
        `total_cores` = #{entity.totalCores},
      </if>
      <if test="entity.totalSockets != null and entity.totalSockets != ''">
        `total_sockets` = #{entity.totalSockets},
      </if>
      <if test="entity.coresPerSocket != null and entity.coresPerSocket != ''">
        `cores_per_socket` = #{entity.coresPerSocket},
      </if>
      <if test="entity.able != null and entity.able != ''">
        `able` = #{entity.able},
      </if>
      <if test="entity.del != null and entity.del != ''">
        `del` = #{entity.del},
      </if>
      <if test="entity.createTime != null and entity.createTime != ''">
        `create_time` = #{entity.createTime},
      </if>
      <if test="entity.updateTime != null and entity.updateTime != ''">
        `update_time` = #{entity.updateTime},
      </if>
    </set>
    WHERE
      id = #{id}
  </update>

  <!--通过主键删除-->
  <update id="deleteById">
    UPDATE host_cpu_core
    SET
      del = 1,
      update_time = now()
    WHERE
      id = #{id}
  </update>

  <!--通过主键批量删除-->
  <update id="deleteByIds">
    UPDATE host_cpu_core
    SET
      del = 1,
      update_time = now()
    WHERE
      id in
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </update>

  <!--通过主键启禁-->
  <update id="ableById">
    UPDATE host_cpu_core
    SET
      able = #{able},
      update_time = now()
    WHERE
      id = #{id}
  </update>

  <!--通过主键批量启禁-->
  <update id="ableByIds">
    UPDATE host_cpu_core
    SET
      able = #{able},
      update_time = now()
    WHERE
      id in
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </update>

</mapper>
