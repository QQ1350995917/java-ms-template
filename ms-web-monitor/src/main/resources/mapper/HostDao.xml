<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pwd.initializr.monitor.persistence.dao.HostDao">

  <resultMap id="HostMap" type="pwd.initializr.monitor.persistence.entity.HostEntity">
    <result column="group_name" jdbcType="VARCHAR" property="groupName"/>
    <result column="node_name" jdbcType="VARCHAR" property="nodeName"/>
    <result column="distribute_id" jdbcType="VARCHAR" property="distributeId"/>
    <result column="distribute_name" jdbcType="VARCHAR" property="distributeName"/>
    <result column="distribute_id_like" jdbcType="VARCHAR" property="distributeIdLike"/>
    <result column="distribute_version" jdbcType="VARCHAR" property="distributeVersion"/>
    <result column="distribute_code_name" jdbcType="VARCHAR" property="distributeCodeName"/>
    <result column="distribute_description" jdbcType="VARCHAR" property="distributeDescription"/>
    <result column="operating_system" jdbcType="VARCHAR" property="operatingSystem"/>
    <result column="hardware_platform" jdbcType="VARCHAR" property="hardwarePlatform"/>
    <result column="system_up_since" jdbcType="VARCHAR" property="systemUpSince"/>
    <result column="kernel_name" jdbcType="VARCHAR" property="kernelName"/>
    <result column="kernel_version" jdbcType="VARCHAR" property="kernelVersion"/>
    <result column="kernel_release" jdbcType="VARCHAR" property="kernelRelease"/>
    <result column="machine" jdbcType="VARCHAR" property="machine"/>
    <result column="processor" jdbcType="VARCHAR" property="processor"/>
    <result column="able" jdbcType="INTEGER" property="able"/>
    <result column="del" jdbcType="INTEGER" property="del"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>

  <!--根据主键查询查询-->
  <select id="queryById" resultMap="HostMap">
    SELECT
      `group_name`,
      `node_name`,
      `distribute_id`,
      `distribute_name`,
      `distribute_id_like`,
      `distribute_version`,
      `distribute_code_name`,
      `distribute_description`,
      `operating_system`,
      `hardware_platform`,
      `system_up_since`,
      `kernel_name`,
      `kernel_version`,
      `kernel_release`,
      `machine`,
      `processor`,
      `able`,
      `del`,
      `create_time`,
      `update_time`
    FROM
      host
    WHERE
      id = #{id}
  </select>

  <!--查询指定行数据-->
  <select id="countByCondition" resultType="java.lang.Long">
    SELECT COUNT(*) FROM host
    <include refid="pwd.initializr.common.web.persistence.entity.ScopeEntity.entityQueryScope"></include>
  </select>

  <!--通过实体作为筛选条件查询-->
  <select id="queryByCondition" resultMap="HostMap">
    SELECT
      `group_name`,
      `node_name`,
      `distribute_id`,
      `distribute_name`,
      `distribute_id_like`,
      `distribute_version`,
      `distribute_code_name`,
      `distribute_description`,
      `operating_system`,
      `hardware_platform`,
      `system_up_since`,
      `kernel_name`,
      `kernel_version`,
      `kernel_release`,
      `machine`,
      `processor`,
      `able`,
      `del`,
      `create_time`,
      `update_time`
    FROM
      host
    <include refid="pwd.initializr.common.web.persistence.entity.ScopeEntity.entityQueryScope"></include>
    <include refid="pwd.initializr.common.web.persistence.entity.SortEntity.entityQuerySort"></include>
    LIMIT
      #{offset}, #{limit}
  </select>

  <!--新增所有列-->
  <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="pwd.initializr.monitor.persistence.entity.HostEntity">
    INSERT INTO host
      (
        `group_name`,
        `node_name`,
        `distribute_id`,
        `distribute_name`,
        `distribute_id_like`,
        `distribute_version`,
        `distribute_code_name`,
        `distribute_description`,
        `operating_system`,
        `hardware_platform`,
        `system_up_since`,
        `kernel_name`,
        `kernel_version`,
        `kernel_release`,
        `machine`,
        `processor`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
      )
    VALUES
      (
        #{entity.groupName},
        #{entity.nodeName},
        #{entity.distributeId},
        #{entity.distributeName},
        #{entity.distributeIdLike},
        #{entity.distributeVersion},
        #{entity.distributeCodeName},
        #{entity.distributeDescription},
        #{entity.operatingSystem},
        #{entity.hardwarePlatform},
        #{entity.systemUpSince},
        #{entity.kernelName},
        #{entity.kernelVersion},
        #{entity.kernelRelease},
        #{entity.machine},
        #{entity.processor},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
      )
  </insert>

  <!--新增所有列（批量新增）-->
  <insert id="insertByBatch" keyProperty="id" useGeneratedKeys="true" parameterType="pwd.initializr.monitor.persistence.entity.HostEntity">
    INSERT INTO host
    (
        `group_name`,
        `node_name`,
        `distribute_id`,
        `distribute_name`,
        `distribute_id_like`,
        `distribute_version`,
        `distribute_code_name`,
        `distribute_description`,
        `operating_system`,
        `hardware_platform`,
        `system_up_since`,
        `kernel_name`,
        `kernel_version`,
        `kernel_release`,
        `machine`,
        `processor`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
    )
    VALUES
    <foreach collection="entities" item="entity" separator=",">
    (
        #{entity.groupName},
        #{entity.nodeName},
        #{entity.distributeId},
        #{entity.distributeName},
        #{entity.distributeIdLike},
        #{entity.distributeVersion},
        #{entity.distributeCodeName},
        #{entity.distributeDescription},
        #{entity.operatingSystem},
        #{entity.hardwarePlatform},
        #{entity.systemUpSince},
        #{entity.kernelName},
        #{entity.kernelVersion},
        #{entity.kernelRelease},
        #{entity.machine},
        #{entity.processor},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
    )
    </foreach>
  </insert>

  <!--新增或者替换所有列-->
  <insert id="insertOrReplace" parameterType="pwd.initializr.monitor.persistence.entity.HostEntity">
    REPLACE INTO host
    (
        `group_name`,
        `node_name`,
        `distribute_id`,
        `distribute_name`,
        `distribute_id_like`,
        `distribute_version`,
        `distribute_code_name`,
        `distribute_description`,
        `operating_system`,
        `hardware_platform`,
        `system_up_since`,
        `kernel_name`,
        `kernel_version`,
        `kernel_release`,
        `machine`,
        `processor`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
    )
    VALUES
    (
        #{entity.groupName},
        #{entity.nodeName},
        #{entity.distributeId},
        #{entity.distributeName},
        #{entity.distributeIdLike},
        #{entity.distributeVersion},
        #{entity.distributeCodeName},
        #{entity.distributeDescription},
        #{entity.operatingSystem},
        #{entity.hardwarePlatform},
        #{entity.systemUpSince},
        #{entity.kernelName},
        #{entity.kernelVersion},
        #{entity.kernelRelease},
        #{entity.machine},
        #{entity.processor},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
    )
  </insert>

  <!--新增或者替换所有列（批量新增或者替换）-->
  <insert id="insertOrReplaceByBatch" keyProperty="id" useGeneratedKeys="true" parameterType="pwd.initializr.monitor.persistence.entity.HostEntity">
    REPLACE INTO host
    (
        `group_name`,
        `node_name`,
        `distribute_id`,
        `distribute_name`,
        `distribute_id_like`,
        `distribute_version`,
        `distribute_code_name`,
        `distribute_description`,
        `operating_system`,
        `hardware_platform`,
        `system_up_since`,
        `kernel_name`,
        `kernel_version`,
        `kernel_release`,
        `machine`,
        `processor`,
        `able`,
        `del`,
        `create_time`,
        `update_time`
    )
    VALUES
    <foreach collection="entities" item="entity" separator=",">
      (
        #{entity.groupName},
        #{entity.nodeName},
        #{entity.distributeId},
        #{entity.distributeName},
        #{entity.distributeIdLike},
        #{entity.distributeVersion},
        #{entity.distributeCodeName},
        #{entity.distributeDescription},
        #{entity.operatingSystem},
        #{entity.hardwarePlatform},
        #{entity.systemUpSince},
        #{entity.kernelName},
        #{entity.kernelVersion},
        #{entity.kernelRelease},
        #{entity.machine},
        #{entity.processor},
        #{entity.able},
        #{entity.del},
        #{entity.createTime},
        #{entity.updateTime}
      )
    </foreach>
  </insert>

  <!--通过主键修改数据-->
  <update id="updateById" parameterType="pwd.initializr.monitor.persistence.entity.HostEntity">
    UPDATE host
    <set>
      <if test="entity.groupName != null and entity.groupName != ''">
        `group_name` = #{entity.groupName},
      </if>
      <if test="entity.nodeName != null and entity.nodeName != ''">
        `node_name` = #{entity.nodeName},
      </if>
      <if test="entity.distributeId != null and entity.distributeId != ''">
        `distribute_id` = #{entity.distributeId},
      </if>
      <if test="entity.distributeName != null and entity.distributeName != ''">
        `distribute_name` = #{entity.distributeName},
      </if>
      <if test="entity.distributeIdLike != null and entity.distributeIdLike != ''">
        `distribute_id_like` = #{entity.distributeIdLike},
      </if>
      <if test="entity.distributeVersion != null and entity.distributeVersion != ''">
        `distribute_version` = #{entity.distributeVersion},
      </if>
      <if test="entity.distributeCodeName != null and entity.distributeCodeName != ''">
        `distribute_code_name` = #{entity.distributeCodeName},
      </if>
      <if test="entity.distributeDescription != null and entity.distributeDescription != ''">
        `distribute_description` = #{entity.distributeDescription},
      </if>
      <if test="entity.operatingSystem != null and entity.operatingSystem != ''">
        `operating_system` = #{entity.operatingSystem},
      </if>
      <if test="entity.hardwarePlatform != null and entity.hardwarePlatform != ''">
        `hardware_platform` = #{entity.hardwarePlatform},
      </if>
      <if test="entity.systemUpSince != null and entity.systemUpSince != ''">
        `system_up_since` = #{entity.systemUpSince},
      </if>
      <if test="entity.kernelName != null and entity.kernelName != ''">
        `kernel_name` = #{entity.kernelName},
      </if>
      <if test="entity.kernelVersion != null and entity.kernelVersion != ''">
        `kernel_version` = #{entity.kernelVersion},
      </if>
      <if test="entity.kernelRelease != null and entity.kernelRelease != ''">
        `kernel_release` = #{entity.kernelRelease},
      </if>
      <if test="entity.machine != null and entity.machine != ''">
        `machine` = #{entity.machine},
      </if>
      <if test="entity.processor != null and entity.processor != ''">
        `processor` = #{entity.processor},
      </if>
      <if test="entity.able != null and entity.able != ''">
        `able` = #{entity.able},
      </if>
      <if test="entity.del != null and entity.del != ''">
        `del` = #{entity.del},
      </if>
      <if test="entity.createTime != null and entity.createTime != ''">
        `create_time` = #{entity.createTime},
      </if>
      <if test="entity.updateTime != null and entity.updateTime != ''">
        `update_time` = #{entity.updateTime},
      </if>
    </set>
    WHERE
      id = #{entity.id}
  </update>

  <!--通过主键删除-->
  <update id="deleteById">
    UPDATE host
    SET
      del = 1,
      update_time = now()
    WHERE
      id = #{id}
  </update>

  <!--通过主键批量删除-->
  <update id="deleteByIds">
    UPDATE host
    SET
      del = 1,
      update_time = now()
    WHERE
      id in
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </update>

  <!--通过主键启禁-->
  <update id="ableById">
    UPDATE host
    SET
      able = #{able},
      update_time = now()
    WHERE
      id = #{id}
  </update>

  <!--通过主键批量启禁-->
  <update id="ableByIds">
    UPDATE host
    SET
      able = #{able},
      update_time = now()
    WHERE
      id in
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </update>

</mapper>
